<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd">
        
	<!-- 激活 Spring的 @Required,@Autowired,JSR 250's @PostConstruct, @PreDestroy and @Resource 等注解，
	          让这些标注生效，使用户可以在Spring MVC中使用Spring的强大功能。
	          只对已经在spring容器里注册过的bean（无论是通过xml的方式还是通过package sanning的方式）有效!!     
	 -->
	<!-- <context:annotation-config/>  -->

	<!-- 除了具有<context:annotation-config/>标签的功能，还可以在指定的package下扫描以及向spring容器注册javabean -->
	<context:component-scan base-package="edu.mvcdemo.controller">
	    <!-- 只注册@Controller类型的bean，忽略其他型的bean，如@Service-->
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<!-- 解决@ResponseBody返回中文乱码，必须放在<mvc:annotation-driven>之前 -->    
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">    
        <property name="messageConverters">    
            <list>
                <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/>
                <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                    <property name="writeAcceptCharset" value="false" /> <!--  用于避免响应头过大  -->
                    <property name="supportedMediaTypes">    
                        <list>    
                            <value>text/plain;charset=UTF-8</value>  
                            <value>text/html;charset=UTF-8</value>  
                            <value>applicaiton/javascript;charset=UTF-8</value> 
                        </list>    
                    </property>    
                </bean>    
            </list>    
        </property>    
    </bean>  
    	
    <!-- 激活注解 @RequestMapping, @ExceptionHandler,@Controller,@RequestBody ,@ResponseBody等，
                  即Spring MVC的Controller的相关的注解和数据绑定的注解都会生效 -->
	<mvc:annotation-driven/>
	
    <!-- 静态资源处理， css， js， imgs，html 等-->
	<mvc:resources location="/resources/" mapping="/resources/**"  />	
	
    <bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<property name="order" value="1" />
		<property name="defaultViews">
			<list>
				<!-- Json视图 -->
				<bean class="org.springframework.web.servlet.view.json.MappingJackson2JsonView"/>
			</list>
		</property>
	</bean>
	
    <!-- Jsp视图解析器 -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
	    <!-- <property name="viewClass" value="org.springframework.web.servlet.view.JstlView" /> -->
	    <property name="order" value="2" />
		<property name="prefix" value="/jsp/" />
		<property name="suffix" value=".jsp" />
	</bean>
	
	<!-- 文件上传解析器 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- maxUploadSize 文件附件的大小最大限制，maxUploadSize=-1 表示无穷大，单位是byte。本案例，限制的最大附件为50M -->
		<property name="maxUploadSize" value="52428800" />
		<property name="defaultEncoding" value="UTF-8" />
		<!-- resolveLazily属性启用是为了推迟文件解析，以便捕获文件大小异常 -->
		<property name="resolveLazily" value="true" />
	</bean>
	
	<!-- 
	          用途1：Spring的xml配置文件中，可以通过${属性名}使用properties文件配置的值
	          用途2：可以使用@Value("${属性名}")注解读取properties文件配置的值，再给字段赋值
	                      方法1：注解在字段上，给字段赋值
	                      方法2：注解在字段的setter方法中赋值           
	 -->
	 <bean id="propertyConfigurer"  
           class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">  
          <property name="location">  
              <value>classpath:fileupload.properties</value>  
          </property>  
     </bean>  
     
	 <!-- Interceptor拦截器 -->
	 <mvc:interceptors>
	     <mvc:interceptor>
	         <mvc:mapping path="/hello/*"/>
	         <bean class="edu.mvcdemo.interceptor.HelloWorldInterceptor"></bean>	         
	     </mvc:interceptor>
	     <mvc:interceptor>
	         <mvc:mapping path="/hello/*"/>
	         <bean class="edu.mvcdemo.interceptor.HelloWorldInterceptor2"></bean>
	     </mvc:interceptor>
	     <mvc:interceptor>
	         <mvc:mapping path="/SecurityRiskTest/modiyParams"/>
	         <bean class="edu.mvcdemo.interceptor.ModifyParamsDemoInterceptor"></bean>
	     </mvc:interceptor>
	     <!-- 信息安全拦截器，拦截所有的用户请求 -->
	     <bean class="edu.mvcdemo.interceptor.SecurityRiskInterceptor"/>
	 </mvc:interceptors>
	
</beans>  