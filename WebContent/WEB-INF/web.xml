<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.4" xmlns="http://java.sun.com/xml/ns/j2ee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee 
	http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd">
	<display-name>MavenSpringMvcDemo</display-name>
	
	<!-- 解决乱码 -->
    <filter>
        <filter-name>encodingFilter</filter-name>
        <filter-class>
            org.springframework.web.filter.CharacterEncodingFilter
        </filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
        <init-param>
            <param-name>forceEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>encodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    
	<!-- 初始化 LocalRequestContext 上下文-->
 	<filter>
	    <filter-name>context-filter</filter-name>
	    <filter-class>common.filter.LocalRequestContextFilter</filter-class>
	</filter>
	<filter-mapping>
	    <filter-name>context-filter</filter-name>
	    <url-pattern>/*</url-pattern>
	</filter-mapping>    

	<!-- Spring应用上下文，如果不想使用Spring容器管理java bean，只是单纯第使用Spring MVC，可以不添加 -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<!-- 不仅包含class路径，还包括jar文件中(class路径)进行查找，会导致项目启动的时候加载很慢，尽量避免使用 -->
		<!-- <param-name>classpath*:springCfg/applicationContext-*.xml</param-name> -->
		<!-- 只在项目的class路径中查找文件 -->
		<param-value>classpath:springCfg/applicationContext-*.xml</param-value>
	</context-param>
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	
	<!-- DispatcherServlet, Spring MVC的核心 -->
	<servlet>
		<servlet-name>mvc-dispatcher</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<!-- DispatcherServlet对应的上下文配置， 默认为/WEB-INF/$servlet-name$-servlet.xml -->
		<!-- 以本案例为例子，默认为/WEB-INF/mvc-dispatcher-servlet.xml -->
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<!-- classpath*：不仅包含class路径，还包括jar文件中(class路径)进行查找 -->
			<!-- <param-value>classpath*:springCfg/spring-mvc-dispatcher-servlet.xml</param-value>  -->
			<param-value>classpath:springCfg/spring-mvc-dispatcher-servlet.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>mvc-dispatcher</servlet-name>
		<!-- mvc-dispatcher拦截jsp页面除外的所有的请求，如果也要拦截jsp页面可以使用/* -->
		<url-pattern>/</url-pattern>
	</servlet-mapping>

	<!-- 将request请求对象封装成SecurityRiskRequestWrapper -->
 	<filter>
	    <filter-name>request-wrap-filter</filter-name>
	    <filter-class>common.filter.SecurityRiskRequestWrapperFilter</filter-class>
	</filter>
	<filter-mapping>
	    <filter-name>request-wrap-filter</filter-name>
	    <url-pattern>/*</url-pattern>
	</filter-mapping>	
</web-app>
